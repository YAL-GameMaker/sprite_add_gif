<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gif_preinit(); // call before anything else
gif_sprite = -1; // sprite containing the GIF frames
gif_subimg = 0; // current frame index
gif_delays = array_create(0); // delays per frame, in centiseconds
gif_frames = 0; // number of frames in the GIF
gif_timer = 0; // accumulates centiseconds for moving over to the next frame
gif_bottom_text = ""; // informative
scr_load_gif("Edited Frog Run Cycle from Pixel Adventure by Pixel Frog.gif");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var _width = window_get_width();
var _height = window_get_height();
if (surface_get_width(application_surface) != _width
    || surface_get_height(application_surface) != _height
) {
    surface_resize(application_surface, _width, _height);
    display_set_gui_size(_width, _height);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var _width = display_get_gui_width();
var _height = display_get_gui_height();

if (gif_sprite != -1) {
    var _delta = delta_time / (1000000 / 100);
    gif_timer += _delta;
    while (gif_timer &gt; gif_delays[gif_subimg]) {
        gif_timer -= gif_delays[gif_subimg];
        gif_subimg = (gif_subimg + 1) % gif_frames;
    }
    //
    var gif_width = sprite_get_width(gif_sprite);
    var gif_height = sprite_get_height(gif_sprite);
    var gif_scale = max(1, min(_width div gif_width, (_height - string_height("Q") * 2) div gif_height));
    var gif_x = (_width - gif_width * gif_scale) div 2;
    var gif_y = (_height - gif_height * gif_scale) div 2;
    draw_sprite_ext(gif_sprite, gif_subimg, gif_x, gif_y, gif_scale, gif_scale, 0, c_white, 1);
    draw_rectangle(gif_x - 1.5, gif_y - 1.5, gif_x + gif_width * gif_scale + .5, gif_y + gif_height * gif_scale + .5, 1);
    //
    if (mouse_check_button_pressed(mb_right)) {
        sprite_save_strip(gif_sprite, "sprite.png");
    }
}

if (mouse_check_button_pressed(mb_left)) {
    var _path = get_open_filename("GIFs|*.gif", "");
    if (_path != "" &amp;&amp; file_exists(_path)) scr_load_gif(_path);
}

draw_set_font(fnt_test);
draw_set_halign(fa_center);
draw_text(_width div 2, 5, "Click to pick a GIF!");
draw_set_valign(fa_bottom);
draw_text(_width div 2, _height - 5, gif_bottom_text);
draw_set_valign(fa_top);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
